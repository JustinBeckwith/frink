<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" width="100%" height="100%" xmlns:renderers="views.renderers.*" creationComplete="creationCompleteHandler(event)" xmlns:controls="controls.*"
		  backgroundColor="0xCCCCCC" xmlns:panels="views.panels.*" show="showHandler(event)" hide="hideHandler(event)" >
	<fx:Metadata>
		[Event(name="close", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import flash.filters.*;
			import flash.net.navigateToURL;
			
			import mx.events.FlexEvent;
			
			//--------------------------------------------------------------------------
			//
			//  Variables
			//
			//--------------------------------------------------------------------------
			
			private var _post : Object;
			
			[Bindable]
			public function get post() : Object {
				return _post;
			}
			public function set post(value:Object) : void {
				_post = value;
				if (_post.data.is_self) {
					this.comments.loadComments(_post);
					this.comments.visible = true;
				} else {
					this.comments.visible = false;
				}
				this.browser.visible = !_post.data.is_self;
				
				// set the up/down vote icon glows
				btnUp.filters = btnDown.filters = null;
				if (_post.data.likes == true) {
					btnUp.filters = [glowWorm];
				}
				else if (_post.data.likes == false) {
					btnDown.filters = [glowWorm];
				}
					
			}
			
			//--------------------------------------------------------------------------
			//
			//  Methods
			//
			//--------------------------------------------------------------------------
			
			/**
			 * manage the UI and api calls for a vote
			 * 
			 * the reddit API only takes a +1, 0, -1 for votes.  An upvote after a downvote
			 * simply sends the +1, up after up sends a 0, etc
			 **/
			protected function makeVote(up:Boolean) : void {
				
				var dir : int = 0;
				
				// figure out if the user likes it, hates it, or is ambivalent
				if (post.data.likes == null) {
					// there hasn't been a vote yet, so just make the call and do the UI work
					dir = up ? 1 : -1;
				} else if (post.data.likes == false) {
					// the post was previously down voted - undo downs but flipsy up votes
					dir = up ? 1 : 0;
				} else if (post.data.likes == true) {
					// the post was previously up voted - undo ups but flipsy downs
					dir = up ? 0 : -1;
				}
				
				// update the underlying data structure and UI elements 
				if (dir == 0) {
					post.data.likes = null;
					btnUp.filters = null;
					btnDown.filters = null;
				} else if (dir == -1) {
					post.data.likes = false;
					btnUp.filters = null;
					btnDown.filters = [glowWorm];
				} else if (dir == 1) { 
					post.data.likes = true;
					btnUp.filters = [glowWorm];
					btnDown.filters = null;
				}
				
				// perform the back end data call to cast the vote
				FrinkData.instance.api.vote(post.data.name, dir);
			}
			
			//--------------------------------------------------------------------------
			//
			//  Event Handlers
			//
			//--------------------------------------------------------------------------
			
			
			/**
			 * add the web browser thingy
			 **/
			protected function creationCompleteHandler(event:FlexEvent):void
			{
			
			}

			/**
			 * close this up and back to normal
			 **/
			protected function btnBack_clickHandler(event:MouseEvent):void
			{
				this.browser.visible = false;
				this.dispatchEvent(new Event(Event.CLOSE));
			}

			/**
			 * register up boat
			 **/
			protected function btnUp_clickHandler(event:MouseEvent):void
			{			
				this.makeVote(true);	
			}
			
			/**
			 * register down boat
			 **/
			protected function btnDown_clickHandler(event:MouseEvent):void
			{
				this.makeVote(false);
			}
			
			/**
			 * switch to/from comments view
			 **/
			protected function btnComments_clickHandler(event:MouseEvent):void
			{
				if (!this.comments.visible) {
					this.comments.loadComments(this.post);
				} 
				this.browser.visible = this.comments.visible;
				this.comments.visible = !this.comments.visible;
			}
			
			/**
			 * open the post in a browser window
			 **/
			protected function btnWindow_clickHandler(event:MouseEvent):void
			{
				flash.net.navigateToURL(new URLRequest(post.data.url));
			}


			/**
			 * manage the visibility of this web control
			 **/
			protected function showHandler(event:FlexEvent):void
			{
				this.browser.visible = !_post.data.is_self;
			}
			
			/**
			 * manage the visibility of this web control
			 **/
			protected function hideHandler(event:FlexEvent):void
			{
				this.browser.visible = false;
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:GlowFilter id="glowWorm" color="0x33CCFF" alpha="0.8" blurX="35" blurY="35" strength="2" quality="{BitmapFilterQuality.HIGH}" />	
	</fx:Declarations>
	
	
	
	
	<s:filters>
		<s:GradientGlowFilter distance="10" angle="180" strength="1"
								quality="{BitmapFilterQuality.HIGH}" type="{BitmapFilterType.OUTER}">
			<s:entries>
				<s:GradientEntry alpha="0" color="0x000000" />
				<s:GradientEntry alpha="0.2" color="0x000000" />
			</s:entries>
		</s:GradientGlowFilter>
	</s:filters>
	
	<s:Line left="0" top="0" bottom="0">
		<s:stroke>
			<s:SolidColorStroke color="0x515151" />
		</s:stroke>
	</s:Line>
	
	<s:VGroup width="100%" height="100%" gap="0">
		<!-- top bar -->
		<s:SkinnableContainer width="100%">
			<s:Rect left="0" right="0" top="0" bottom="1">
				<s:fill>
					<s:LinearGradient rotation="90">
						<s:GradientEntry color="0xf3f3f5" />
						<s:GradientEntry color="0xdedfe5" />
					</s:LinearGradient>
				</s:fill>
			</s:Rect>
			<s:Line left="0" right="0" bottom="0">
				<s:stroke>
					<s:SolidColorStroke color="0xa5a5a5" />
				</s:stroke>
			</s:Line>
			
			<s:HGroup width="100%" paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10" >
				<renderers:PostDetails data="{post}" width="100%" currentState="header" />
				<s:HGroup>
					<s:Image source="@Embed(source='assets/NIXUS/32x32/Back.png')" id="btnBack" click="btnBack_clickHandler(event)" />
					<s:Image source="@Embed(source='assets/NIXUS/32x32/Up.png')" id="btnUp" click="btnUp_clickHandler(event)" />
					<s:Image source="@Embed(source='assets/NIXUS/32x32/Down.png')" id="btnDown" click="btnDown_clickHandler(event)" />
					<s:Image source="@Embed(source='assets/NIXUS/32x32/Chat.png')" id="btnComments" click="btnComments_clickHandler(event)"/>
					<s:Image source="@Embed(source='assets/NIXUS/32x32/Window.png')" id="btnWindow" click="btnWindow_clickHandler(event)" />
				</s:HGroup>
			</s:HGroup> 
		</s:SkinnableContainer>
		
		
		<!-- post frame -->	
		<s:SkinnableContainer width="100%" height="100%">
			<controls:WebBrowser width="100%" height="100%" source="{post.data.url}" id="browser" />	
			<panels:CommentList width="100%" height="100%" visible="false" id="comments" />
		</s:SkinnableContainer>
		
	</s:VGroup>
	
</s:SkinnableContainer>
